{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/AccountService\";\nimport * as i2 from \"@angular/router\";\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r8.message, \"\");\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r8 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.hasError(validation_r8.type)) && ((ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.dirty) || (ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 19);\n    i0.ɵɵtext(2, \"git Account already exists! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r11.message, \"\");\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r11 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"email\")) == null ? null : tmp_0_0.hasError(validation_r11.type)) && ((ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"email\")) == null ? null : tmp_0_0.dirty) || (ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"email\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 19);\n    i0.ɵɵtext(2, \" Email already exists! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r14.message, \"\");\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r14 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r4.formRegister == null ? null : (tmp_0_0 = ctx_r4.formRegister.get(\"password\")) == null ? null : tmp_0_0.hasError(validation_r14.type)) && ((ctx_r4.formRegister == null ? null : (tmp_0_0 = ctx_r4.formRegister.get(\"password\")) == null ? null : tmp_0_0.dirty) || (ctx_r4.formRegister == null ? null : (tmp_0_0 = ctx_r4.formRegister.get(\"password\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r17.message, \"\");\n  }\n}\nfunction RegisterComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_28_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r17 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.hasError(validation_r17.type)) && ((ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.dirty) || (ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 19);\n    i0.ɵɵtext(2, \" Re-entered password does not match! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r20.message, \"\");\n  }\n}\nfunction RegisterComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_35_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r20 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r7.formRegister == null ? null : (tmp_0_0 = ctx_r7.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.hasError(validation_r20.type)) && ((ctx_r7.formRegister == null ? null : (tmp_0_0 = ctx_r7.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.dirty) || (ctx_r7.formRegister == null ? null : (tmp_0_0 = ctx_r7.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nexport class RegisterComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.today = new Date().toISOString().split(\"T\")[0];\n    console.log(this.today);\n    this.formRegister = new FormGroup({\n      username: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl(''),\n      birthday: new FormControl('')\n    });\n  }\n  createAccount() {\n    this.accountService.createAccount(this.formRegister.value).subscribe(res => {\n      this.router.navigate([\"/home\"]);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 38,\n  vars: 10,\n  consts: [[\"uk-height-viewport\", \"expand: true\", 1, \"uk-flex\", \"uk-flex-middle\"], [1, \"uk-width-1-3@m\", \"uk-width-1-2@s\", \"m-auto\"], [1, \"px-2\", \"uk-animation-scale-up\"], [1, \"my-4\", \"uk-text-center\"], [1, \"mb-2\"], [1, \"my-2\"], [\"routerLink\", \"/login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"uk-form-group\"], [1, \"uk-position-relative\", \"w-100\"], [\"type\", \"text\", \"placeholder\", \"Your Username\", \"formControlName\", \"username\", 1, \"uk-input\", 3, \"ngModelChange\"], [\"class\", \"uk-position-relative w-100\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"uk-position-relative w-100\", 4, \"ngIf\"], [\"type\", \"email\", \"placeholder\", \"Your email \", \"formControlName\", \"email\", 1, \"uk-input\", 3, \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Your password\", \"formControlName\", \"password\", 1, \"uk-input\"], [\"type\", \"password\", \"placeholder\", \"Confirm password\", \"formControlName\", \"confirmPassword\", 1, \"uk-input\", 3, \"ngModelChange\"], [\"type\", \"date\", \"id\", \"start\", \"name\", \"trip-start\", \"value\", \"yyyy-mm-dd\", \"min\", \"yyyy-01-01\", \"formControlName\", \"birthday\", 1, \"uk-input\", 3, \"max\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \" Register Form \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 5);\n      i0.ɵɵtext(7, \"Do you have an a account. \");\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \" Log in \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.createAccount();\n      });\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_13_listener() {\n        let tmp_b_0;\n        return ctx.funcCheckDuplicateUsername((tmp_b_0 = ctx.formRegister.get(\"username\")) == null ? null : tmp_b_0.value);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 11);\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 9)(18, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener() {\n        let tmp_b_0;\n        return ctx.funcCheckDuplicateEmail((tmp_b_0 = ctx.formRegister.get(\"email\")) == null ? null : tmp_b_0.value);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 11);\n      i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 8)(22, \"div\", 9);\n      i0.ɵɵelement(23, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 8)(26, \"div\", 9)(27, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_27_listener() {\n        return ctx.funcCheckConfirmPassword();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, RegisterComponent_div_28_Template, 2, 1, \"div\", 11);\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"p\");\n      i0.ɵɵtext(31, \"Birthday \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 9);\n      i0.ɵɵelement(34, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, RegisterComponent_div_35_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 17);\n      i0.ɵɵtext(37, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.formRegister);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkDuplicateUsername);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkDuplicateEmail);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.confirmPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkConfirmPassword);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"max\", ctx.today);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.birthday);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","i0","RegisterComponent","constructor","accountService","router","ngOnInit","today","Date","toISOString","split","console","log","formRegister","username","email","password","birthday","createAccount","value","subscribe","res","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\FE6\\FE_Module6\\src\\app\\register\\register.component.ts","C:\\Users\\Administrator\\Desktop\\FE6\\FE_Module6\\src\\app\\register\\register.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AccountService} from \"../service/AccountService\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit{\r\n  constructor(private accountService: AccountService, private router:Router) {\r\n  }\r\n  formRegister!:FormGroup;\r\n  today!:any\r\n  ngOnInit() {\r\n    this.today= new Date().toISOString().split(\"T\")[0];\r\n    console.log(this.today)\r\n    this.formRegister= new FormGroup({\r\n      username: new FormControl(''),\r\n      email: new FormControl(''),\r\n      password: new FormControl(''),\r\n      birthday: new FormControl(''),\r\n    })\r\n  }\r\n  createAccount(){\r\n    this.accountService.createAccount(this.formRegister.value).subscribe(\r\n        res=>{\r\n          this.router.navigate([\"/home\"])\r\n        }\r\n    )\r\n  }\r\n}\r\n","<!--&lt;!&ndash; Content-->\r\n<!--    ================================================== &ndash;&gt;-->\r\n<div uk-height-viewport=\"expand: true\" class=\"uk-flex uk-flex-middle\">\r\n    <div class=\"uk-width-1-3@m uk-width-1-2@s m-auto\">\r\n        <div class=\"px-2 uk-animation-scale-up\">\r\n            <div class=\"my-4 uk-text-center\">\r\n                <h1 class=\"mb-2\"> Register Form  </h1>\r\n                <p class=\"my-2\">Do you have an a account. <a routerLink=\"/login\"> Log in </a> </p>\r\n            </div>\r\n            <form [formGroup]=\"formRegister\" (ngSubmit)=\"createAccount()\">\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"text\" (ngModelChange)=\"funcCheckDuplicateUsername(formRegister.get('username')?.value)\" placeholder=\"Your Username\" formControlName=\"username\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.username\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('username')?.hasError(validation.type) && (formRegister?.get('username')?.dirty || formRegister?.get('username')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngIf=\"checkDuplicateUsername\">\r\n                        <div class=\"error-message\">git\r\n                            Account already exists!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"email\" (ngModelChange)=\"funcCheckDuplicateEmail(formRegister.get('email')?.value)\" placeholder=\"Your email \" formControlName=\"email\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.email\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('email')?.hasError(validation.type) && (formRegister?.get('email')?.dirty || formRegister?.get('email')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngIf=\"checkDuplicateEmail\">\r\n                        <div class=\"error-message\">\r\n                            Email already exists!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\"  placeholder=\"Your password\" formControlName=\"password\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.password\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('password')?.hasError(validation.type) && (formRegister?.get('password')?.dirty || formRegister?.get('password')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\" (ngModelChange)=\"funcCheckConfirmPassword()\"  placeholder=\"Confirm password\" formControlName=\"confirmPassword\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.confirmPassword\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('confirmPassword')?.hasError(validation.type) && (formRegister?.get('confirmPassword')?.dirty || formRegister?.get('confirmPassword')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngIf=\"checkConfirmPassword\">\r\n                        <div class=\"error-message\">\r\n                            Re-entered password does not match!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p>Birthday </p>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                               value=\"yyyy-mm-dd\"\r\n                               min=\"yyyy-01-01\" [max]=\"today\" formControlName=\"birthday\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.birthday\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('birthday')?.hasError(validation.type) && (formRegister?.get('birthday')?.dirty || formRegister?.get('birthday')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Register</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}