{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/AccountService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r4.message, \"\");\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formRegister.get(\"username\").hasError(validation_r4.type) && (ctx_r0.formRegister.get(\"username\").dirty || ctx_r0.formRegister.get(\"username\").touched));\n  }\n}\nfunction RegisterComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r7.message, \"\");\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_18_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formRegister.get(\"email\").hasError(validation_r7.type) && (ctx_r1.formRegister.get(\"email\").dirty || ctx_r1.formRegister.get(\"email\").touched));\n  }\n}\nfunction RegisterComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r10.message, \"\");\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_22_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.formRegister.get(\"password\").hasError(validation_r10.type) && (ctx_r2.formRegister.get(\"password\").dirty || ctx_r2.formRegister.get(\"password\").touched));\n  }\n}\nfunction RegisterComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r13.message, \"\");\n  }\n}\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_31_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r13 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.formRegister.get(\"birthday\").hasError(validation_r13.type) && (ctx_r3.formRegister.get(\"birthday\").dirty || ctx_r3.formRegister.get(\"birthday\").touched));\n  }\n}\nexport class RegisterComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.checkDuplicateUsername = false;\n    this.checkDuplicateEmail = false;\n    this.validation_messages = {\n      username: [{\n        type: 'required',\n        message: 'Vui lòng nhập username.'\n      }, {\n        type: 'maxlength',\n        message: 'Vui lòng nhập username ít hơn 40 kí tự.'\n      }],\n      birthday: [{\n        type: 'required',\n        message: 'Vui lòng nhập ngày sinh.'\n      }, {\n        type: 'checkAge',\n        message: 'Tuổi phải từ 18 tuổi.'\n      }],\n      email: [{\n        type: 'required',\n        message: 'Vui lòng nhập đúng định dạng.'\n      }],\n      password: [{\n        type: 'required',\n        message: 'Vui lòng nhập địa chỉ.'\n      }, {\n        type: 'maxlength',\n        message: 'Vui lòng nhập username ít hơn 16 kí tự.'\n      }, {\n        type: 'minlength',\n        message: 'Vui lòng nhập username nhiều hơn 6 kí tự.'\n      }]\n    };\n  }\n  ngOnInit() {\n    this.today = new Date().toISOString().split(\"T\")[0];\n    this.formRegister = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.maxLength(40)]),\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\n      birthday: new FormControl('', [Validators.required, this.checkDateOfBirth])\n    });\n  }\n  createAccount() {\n    this.accountService.createAccount(this.formRegister.value).subscribe(res => Swal.fire('Done!', 'Chúc mừng bạn đăng kí thành công', 'success'));\n  }\n  checkDateOfBirth(control) {\n    const dateOfBirth = new Date(control.value);\n    if (new Date().getFullYear() - dateOfBirth.getFullYear() < 18) {\n      return {\n        checkAge: true\n      };\n    }\n    return null;\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 34,\n  vars: 6,\n  consts: [[\"uk-height-viewport\", \"expand: true\", 1, \"uk-flex\", \"uk-flex-middle\"], [1, \"uk-width-1-3@m\", \"uk-width-1-2@s\", \"m-auto\"], [1, \"px-2\", \"uk-animation-scale-up\"], [1, \"my-4\", \"uk-text-center\"], [1, \"mb-2\"], [1, \"my-2\"], [\"routerLink\", \"/login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"uk-form-group\"], [1, \"uk-position-relative\", \"w-100\"], [\"type\", \"text\", \"placeholder\", \"Your Username\", \"formControlName\", \"username\", 1, \"uk-input\"], [\"class\", \"uk-position-relative w-100\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"email\", \"placeholder\", \"Your email \", \"formControlName\", \"email\", 1, \"uk-input\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Your password\", \"formControlName\", \"password\", 1, \"uk-input\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"placeholder\", \"Confirm password\", 1, \"uk-input\"], [\"type\", \"date\", \"id\", \"start\", \"name\", \"trip-start\", \"value\", \"yyyy-mm-dd\", \"min\", \"yyyy-01-01\", \"formControlName\", \"birthday\", 1, \"uk-input\", 3, \"max\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \" Register Form \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 5);\n      i0.ɵɵtext(7, \"Do you have an a account. \");\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \" Log in \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.createAccount();\n      });\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9);\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 9);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"div\", 9);\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"div\", 9);\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"p\");\n      i0.ɵɵtext(27, \"Birthday \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 8)(29, \"div\", 9);\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 16);\n      i0.ɵɵtext(33, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.formRegister);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.password);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"max\", ctx.today);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.birthday);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Swal","i0","RegisterComponent","constructor","accountService","router","username","type","message","birthday","email","password","ngOnInit","today","Date","toISOString","split","formRegister","required","maxLength","minLength","checkDateOfBirth","createAccount","value","subscribe","res","fire","control","dateOfBirth","getFullYear","checkAge","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Desktop\\FE-6\\FE_Module6\\src\\app\\register\\register.component.ts","C:\\Users\\ASUS\\Desktop\\FE-6\\FE_Module6\\src\\app\\register\\register.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AccountService} from \"../service/AccountService\";\r\nimport {Router} from \"@angular/router\";\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit{\r\n  constructor(private accountService: AccountService, private router:Router) {\r\n  }\r\n  formRegister!:FormGroup;\r\n  public  checkDuplicateUsername:boolean=false;\r\n  public  checkDuplicateEmail:boolean=false;\r\n  today!:any\r\n  ngOnInit() {\r\n    this.today= new Date().toISOString().split(\"T\")[0];\r\n    this.formRegister= new FormGroup({\r\n      username: new FormControl('',[Validators.required,Validators.maxLength(40)]),\r\n      email: new FormControl('',Validators.required),\r\n      password: new FormControl('',[Validators.required, Validators.maxLength(16),Validators.minLength(6)]),\r\n      birthday: new FormControl('',[Validators.required, this.checkDateOfBirth]),\r\n    })\r\n  }\r\n  validation_messages = {\r\n    username: [\r\n      {type: 'required', message: 'Vui lòng nhập username.'},\r\n      {type: 'maxlength', message: 'Vui lòng nhập username ít hơn 40 kí tự.'}\r\n    ],\r\n    birthday: [\r\n      {type: 'required', message: 'Vui lòng nhập ngày sinh.'},\r\n      {type: 'checkAge', message: 'Tuổi phải từ 18 tuổi.'}\r\n    ],\r\n    email: [\r\n      {type: 'required', message: 'Vui lòng nhập đúng định dạng.'}\r\n    ],\r\n    password: [\r\n      {type: 'required', message: 'Vui lòng nhập địa chỉ.'},\r\n      {type: 'maxlength', message: 'Vui lòng nhập username ít hơn 16 kí tự.'},\r\n      {type: 'minlength', message: 'Vui lòng nhập username nhiều hơn 6 kí tự.'},\r\n    ]\r\n  };\r\n  createAccount(){\r\n    this.accountService.createAccount(this.formRegister.value).subscribe(\r\n        res=>\r\n          Swal.fire('Done!', 'Chúc mừng bạn đăng kí thành công', 'success')\r\n    )\r\n  }\r\n  checkDateOfBirth(control: AbstractControl) {\r\n    const dateOfBirth = new Date(control.value);\r\n    if (new Date().getFullYear() - dateOfBirth.getFullYear() < 18) {\r\n      return {checkAge : true};\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","<!--&lt;!&ndash; Content-->\r\n<!--    ================================================== &ndash;&gt;-->\r\n<div uk-height-viewport=\"expand: true\" class=\"uk-flex uk-flex-middle\">\r\n    <div class=\"uk-width-1-3@m uk-width-1-2@s m-auto\">\r\n        <div class=\"px-2 uk-animation-scale-up\">\r\n            <div class=\"my-4 uk-text-center\">\r\n                <h1 class=\"mb-2\"> Register Form  </h1>\r\n                <p class=\"my-2\">Do you have an a account. <a routerLink=\"/login\"> Log in </a> </p>\r\n            </div>\r\n            <form [formGroup]=\"formRegister\" (ngSubmit)=\"createAccount()\">\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"text\"  placeholder=\"Your Username\" formControlName=\"username\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.username\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister.get('username').hasError(validation.type) && (formRegister.get('username').dirty || formRegister.get('username').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"email\" placeholder=\"Your email \" formControlName=\"email\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.email\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister.get('email').hasError(validation.type) && (formRegister.get('email').dirty || formRegister.get('email').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\" id=\"password\" placeholder=\"Your password\" formControlName=\"password\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.password\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister.get('password').hasError(validation.type) && (formRegister.get('password').dirty || formRegister.get('password').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\" id=\"confirmPassword\"  placeholder=\"Confirm password\">\r\n                    </div>\r\n                </div>\r\n                <p>Birthday </p>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                               value=\"yyyy-mm-dd\"\r\n                               min=\"yyyy-01-01\" [max]=\"today\" formControlName=\"birthday\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.birthday\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister.get('birthday').hasError(validation.type) && (formRegister.get('birthday').dirty || formRegister.get('birthday').touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Register</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}