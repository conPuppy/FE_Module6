{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport Swal from 'sweetalert2';\nimport { AccountCreate } from \"../model/AccountCreate\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/AccountService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r6.message, \"\");\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r6 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.hasError(validation_r6.type)) && ((ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.dirty) || (ctx_r0.formRegister == null ? null : (tmp_0_0 = ctx_r0.formRegister.get(\"username\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r9.message, \"\");\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_18_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.formRegister == null ? null : (tmp_0_0 = ctx_r1.formRegister.get(\"email\")) == null ? null : tmp_0_0.hasError(validation_r9.type)) && ((ctx_r1.formRegister == null ? null : (tmp_0_0 = ctx_r1.formRegister.get(\"email\")) == null ? null : tmp_0_0.dirty) || (ctx_r1.formRegister == null ? null : (tmp_0_0 = ctx_r1.formRegister.get(\"email\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r12.message, \"\");\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_22_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r12 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"password\")) == null ? null : tmp_0_0.hasError(validation_r12.type)) && ((ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"password\")) == null ? null : tmp_0_0.dirty) || (ctx_r2.formRegister == null ? null : (tmp_0_0 = ctx_r2.formRegister.get(\"password\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r15.message, \"\");\n  }\n}\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_26_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r15 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.formRegister == null ? null : (tmp_0_0 = ctx_r3.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.hasError(validation_r15.type)) && ((ctx_r3.formRegister == null ? null : (tmp_0_0 = ctx_r3.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.dirty) || (ctx_r3.formRegister == null ? null : (tmp_0_0 = ctx_r3.formRegister.get(\"confirmPassword\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nfunction RegisterComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 19);\n    i0.ɵɵtext(2, \" M\\u1EADt kh\\u1EA9u nh\\u1EADp l\\u1EA1i kh\\u00F4ng kh\\u1EDBp! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegisterComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validation_r18.message, \"\");\n  }\n}\nfunction RegisterComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, RegisterComponent_div_33_div_1_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r18 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.hasError(validation_r18.type)) && ((ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.dirty) || (ctx_r5.formRegister == null ? null : (tmp_0_0 = ctx_r5.formRegister.get(\"birthday\")) == null ? null : tmp_0_0.touched)));\n  }\n}\nexport class RegisterComponent {\n  constructor(accountService, router) {\n    this.accountService = accountService;\n    this.router = router;\n    this.checkDuplicateUsername = false;\n    this.checkDuplicateEmail = false;\n    this.checkConfirmPassword = false;\n    this.validation_messages = {\n      username: [{\n        type: 'required',\n        message: 'Vui lòng nhập username.'\n      }, {\n        type: 'maxlength',\n        message: 'Vui lòng nhập username ít hơn 40 kí tự.'\n      }],\n      birthday: [{\n        type: 'required',\n        message: 'Vui lòng chọn ngày sinh.'\n      }, {\n        type: 'checkAge',\n        message: 'Tuổi phải từ 18 tuổi.'\n      }],\n      email: [{\n        type: 'required',\n        message: 'Vui lòng nhập email.'\n      }, {\n        type: 'pattern',\n        message: 'Vui lòng nhập email theo định dạng abc@xyz.jqk'\n      }],\n      password: [{\n        type: 'required',\n        message: 'Vui lòng nhập mật khẩu.'\n      }, {\n        type: 'maxlength',\n        message: 'Vui lòng nhập mật khẩu ít hơn 16 kí tự.'\n      }, {\n        type: 'minlength',\n        message: 'Vui lòng nhập mật khẩu nhiều hơn 6 kí tự.'\n      }],\n      confirmPassword: [{\n        type: 'required',\n        message: 'Vui lòng nhập lại mật khẩu.'\n      }]\n    };\n  }\n  ngOnInit() {\n    this.today = new Date().toISOString().split(\"T\")[0];\n    this.formRegister = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.maxLength(40)]),\n      email: new FormControl('', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\n      birthday: new FormControl('', [Validators.required, this.checkDateOfBirth])\n    });\n  }\n  funcCheckConfirmPassword() {\n    if (this.formRegister.get(\"password\")?.value != this.formRegister.get(\"confirmPassword\")?.value) {\n      return this.checkConfirmPassword = true;\n    } else {\n      return this.checkConfirmPassword = false;\n    }\n  }\n  checkDateOfBirth(control) {\n    const dateOfBirth = new Date(control.value);\n    if (new Date().getFullYear() - dateOfBirth.getFullYear() < 18) {\n      return {\n        checkAge: true\n      };\n    }\n    return null;\n  }\n  funcCheckDuplicateUsername(username) {\n    if (this.accountService.findAccount()) ;\n  }\n  createAccount() {\n    // @ts-ignore\n    let accountCreate = new AccountCreate(this.formRegister.get(\"username\").value, this.formRegister.get(\"email\").value, this.formRegister.get(\"password\").value, this.formRegister.get(\"birthday\").value);\n    this.accountService.createAccount(accountCreate).subscribe(res => Swal.fire('Done!', 'Chúc mừng bạn đăng kí thành công', 'success'));\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 36,\n  vars: 8,\n  consts: [[\"uk-height-viewport\", \"expand: true\", 1, \"uk-flex\", \"uk-flex-middle\"], [1, \"uk-width-1-3@m\", \"uk-width-1-2@s\", \"m-auto\"], [1, \"px-2\", \"uk-animation-scale-up\"], [1, \"my-4\", \"uk-text-center\"], [1, \"mb-2\"], [1, \"my-2\"], [\"routerLink\", \"/login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"uk-form-group\"], [1, \"uk-position-relative\", \"w-100\"], [\"type\", \"text\", \"placeholder\", \"Your Username\", \"formControlName\", \"username\", 1, \"uk-input\"], [\"class\", \"uk-position-relative w-100\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"email\", \"placeholder\", \"Your email \", \"formControlName\", \"email\", 1, \"uk-input\"], [\"type\", \"password\", \"placeholder\", \"Your password\", \"formControlName\", \"password\", 1, \"uk-input\"], [\"type\", \"password\", \"placeholder\", \"Confirm password\", \"formControlName\", \"confirmPassword\", 1, \"uk-input\", 3, \"ngModelChange\"], [\"class\", \"uk-position-relative w-100\", 4, \"ngIf\"], [\"type\", \"date\", \"id\", \"start\", \"name\", \"trip-start\", \"value\", \"yyyy-mm-dd\", \"min\", \"yyyy-01-01\", \"formControlName\", \"birthday\", 1, \"uk-input\", 3, \"max\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n      i0.ɵɵtext(5, \" Register Form \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 5);\n      i0.ɵɵtext(7, \"Do you have an a account. \");\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \" Log in \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.createAccount();\n      });\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9);\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 9);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"div\", 9);\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"div\", 9)(25, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_25_listener() {\n        return ctx.funcCheckConfirmPassword();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 2, 1, \"div\", 11);\n      i0.ɵɵtemplate(27, RegisterComponent_div_27_Template, 3, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"p\");\n      i0.ɵɵtext(29, \"Birthday \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 8)(31, \"div\", 9);\n      i0.ɵɵelement(32, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, RegisterComponent_div_33_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 17);\n      i0.ɵɵtext(35, \"Register\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.formRegister);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.confirmPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.checkConfirmPassword);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"max\", ctx.today);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.validation_messages.birthday);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Swal","AccountCreate","i0","RegisterComponent","constructor","accountService","router","username","type","message","birthday","email","password","confirmPassword","ngOnInit","today","Date","toISOString","split","formRegister","required","maxLength","pattern","minLength","checkDateOfBirth","funcCheckConfirmPassword","get","value","checkConfirmPassword","control","dateOfBirth","getFullYear","checkAge","funcCheckDuplicateUsername","findAccount","createAccount","accountCreate","subscribe","res","fire","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Desktop\\FE-6\\FE_Module6\\src\\app\\register\\register.component.ts","C:\\Users\\ASUS\\Desktop\\FE-6\\FE_Module6\\src\\app\\register\\register.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AccountService} from \"../service/AccountService\";\r\nimport {Router} from \"@angular/router\";\r\nimport Swal from 'sweetalert2';\r\nimport {AccountCreate} from \"../model/AccountCreate\";\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    constructor(private accountService: AccountService, private router: Router) {\r\n    }\r\n    formRegister!: FormGroup;\r\n    public checkDuplicateUsername: boolean = false;\r\n    public checkDuplicateEmail: boolean = false;\r\n    public checkConfirmPassword: boolean = false;\r\n    today!: any\r\n\r\n    ngOnInit() {\r\n        this.today = new Date().toISOString().split(\"T\")[0];\r\n        this.formRegister = new FormGroup({\r\n            username: new FormControl('', [Validators.required, Validators.maxLength(40)]),\r\n            email: new FormControl('', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\r\n            password: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\r\n            confirmPassword: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(6)]),\r\n            birthday: new FormControl('', [Validators.required, this.checkDateOfBirth]),\r\n        })\r\n    }\r\n\r\n    validation_messages = {\r\n        username: [\r\n            {type: 'required', message: 'Vui lòng nhập username.'},\r\n            {type: 'maxlength', message: 'Vui lòng nhập username ít hơn 40 kí tự.'}\r\n        ],\r\n        birthday: [\r\n            {type: 'required', message: 'Vui lòng chọn ngày sinh.'},\r\n            {type: 'checkAge', message: 'Tuổi phải từ 18 tuổi.'}\r\n        ],\r\n        email: [\r\n            {type: 'required', message: 'Vui lòng nhập email.'},\r\n            {\r\n                type: 'pattern',\r\n                message: 'Vui lòng nhập email theo định dạng abc@xyz.jqk'\r\n            }\r\n        ],\r\n        password: [\r\n            {type: 'required', message: 'Vui lòng nhập mật khẩu.'},\r\n            {type: 'maxlength', message: 'Vui lòng nhập mật khẩu ít hơn 16 kí tự.'},\r\n            {type: 'minlength', message: 'Vui lòng nhập mật khẩu nhiều hơn 6 kí tự.'},\r\n        ],\r\n        confirmPassword: [\r\n            {type: 'required', message: 'Vui lòng nhập lại mật khẩu.'},\r\n        ]\r\n    };\r\n    public funcCheckConfirmPassword():boolean {\r\n        if (this.formRegister.get(\"password\")?.value != this.formRegister.get(\"confirmPassword\")?.value) {\r\n            return this.checkConfirmPassword=true;\r\n        } else {\r\n            return this.checkConfirmPassword=false;\r\n        }\r\n    }\r\n\r\n    checkDateOfBirth(control: AbstractControl) {\r\n        const dateOfBirth = new Date(control.value);\r\n        if (new Date().getFullYear() - dateOfBirth.getFullYear() < 18) {\r\n            return {checkAge: true};\r\n        }\r\n        return null;\r\n    }\r\n    funcCheckDuplicateUsername(username:String){\r\n        if(this.accountService.findAccount())\r\n    }\r\n    createAccount() {\r\n            // @ts-ignore\r\n        let accountCreate = new AccountCreate(this.formRegister.get(\"username\").value, this.formRegister.get(\"email\").value, this.formRegister.get(\"password\").value, this.formRegister.get(\"birthday\").value)\r\n        this.accountService.createAccount(accountCreate).subscribe(\r\n            res =>\r\n                Swal.fire('Done!', 'Chúc mừng bạn đăng kí thành công', 'success')\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","<!--&lt;!&ndash; Content-->\r\n<!--    ================================================== &ndash;&gt;-->\r\n<div uk-height-viewport=\"expand: true\" class=\"uk-flex uk-flex-middle\">\r\n    <div class=\"uk-width-1-3@m uk-width-1-2@s m-auto\">\r\n        <div class=\"px-2 uk-animation-scale-up\">\r\n            <div class=\"my-4 uk-text-center\">\r\n                <h1 class=\"mb-2\"> Register Form  </h1>\r\n                <p class=\"my-2\">Do you have an a account. <a routerLink=\"/login\"> Log in </a> </p>\r\n            </div>\r\n            <form [formGroup]=\"formRegister\" (ngSubmit)=\"createAccount()\">\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"text\"  placeholder=\"Your Username\" formControlName=\"username\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.username\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('username')?.hasError(validation.type) && (formRegister?.get('username')?.dirty || formRegister?.get('username')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"email\" placeholder=\"Your email \" formControlName=\"email\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.email\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('email')?.hasError(validation.type) && (formRegister?.get('email')?.dirty || formRegister?.get('email')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\"  placeholder=\"Your password\" formControlName=\"password\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.password\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('password')?.hasError(validation.type) && (formRegister?.get('password')?.dirty || formRegister?.get('password')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"password\" (ngModelChange)=\"funcCheckConfirmPassword()\"  placeholder=\"Confirm password\" formControlName=\"confirmPassword\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.confirmPassword\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('confirmPassword')?.hasError(validation.type) && (formRegister?.get('confirmPassword')?.dirty || formRegister?.get('confirmPassword')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngIf=\"checkConfirmPassword\">\r\n                        <div class=\"error-message\">\r\n                            Mật khẩu nhập lại không khớp!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p>Birthday </p>\r\n                <div class=\"uk-form-group\">\r\n                    <div class=\"uk-position-relative w-100\">\r\n                        <input class=\"uk-input\" type=\"date\" id=\"start\" name=\"trip-start\"\r\n                               value=\"yyyy-mm-dd\"\r\n                               min=\"yyyy-01-01\" [max]=\"today\" formControlName=\"birthday\">\r\n                    </div>\r\n                    <div class=\"uk-position-relative w-100\" *ngFor=\"let validation of validation_messages.birthday\">\r\n                        <div class=\"error-message\"\r\n                             *ngIf=\"formRegister?.get('birthday')?.hasError(validation.type) && (formRegister?.get('birthday')?.dirty || formRegister?.get('birthday')?.touched)\">\r\n                            {{validation.message}}</div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\">Register</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}